generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model gdcwaitlist {
  user      user    @relation(fields: [email], references: [email])
  email      String   @db.VarChar(100)
  isodate    String   @db.VarChar(100)
  createtime DateTime @default(now()) @db.Timestamp(6)
  restaurant restaurants? @relation(fields: [restaurantid], references: [id])
  restaurantid String?
  @@id([isodate,email])
}

model restaurants {
  id         String @id @default(uuid())
  name       String
  address    String
  city       String
  zip        String
  votes      votes[]
  waitlists gdcwaitlist[]
  googlemapsurl String?
  websiteurl String?
  createtime DateTime @default(now()) @db.Timestamp(6)
  updatetime DateTime @default(now()) @db.Timestamp(6)
}

model votes {
  user        user        @relation(fields: [email], references: [email])
  restaurant  restaurants @relation(fields: [restaurantid], references: [id])
  email       String      @db.VarChar(100)
  restaurantid String
  vote        Boolean
  createtime  DateTime    @default(now()) @db.Timestamp(6)
  @@id([email,restaurantid])
}

model user {
  email String @unique
  votes votes[]
  bingocards bingocard[]
  firstname  String?
  lastname   String?
  imageurl   String?
  waitlists  gdcwaitlist[]
  createtime DateTime @default(now()) @db.Timestamp(6)
  updatetime DateTime @default(now()) @db.Timestamp(6)
  @@id([email])
}

model bingoevent {
  eventslug  String @id
  eventname  String
  bingocards bingocard[]
  fields     bingocardfield[]
  createtime DateTime @default(now()) @db.Timestamp(6)
  updatetime DateTime @default(now()) @db.Timestamp(6)
}

model bingocard {
  bingoevent bingoevent @relation(fields: [eventslug], references: [eventslug])
  eventslug String
  email      String
  user      user @relation(fields: [email], references: [email])
  fields     String[]
  solves    Int[]
  solved    Boolean
  createtime DateTime @default(now()) @db.Timestamp(6)
  updatetime DateTime @default(now()) @db.Timestamp(6)
  @@id ([email,eventslug])
}

model bingocardfield {
  id         String @id @default(uuid())
  fieldvalue String
  bingoevent bingoevent @relation(fields: [eventslug], references: [eventslug])
  eventslug String
  createtime DateTime @default(now()) @db.Timestamp(6)
  updatetime DateTime @default(now()) @db.Timestamp(6)
}
